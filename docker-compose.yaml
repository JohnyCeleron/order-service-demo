services:
  kafka:
    image: apache/kafka:latest
    container_name: broker
    ports:
      - 9092:9092
    environment:
      # --- KRaft базовые ---
      - KAFKA_NODE_ID=1
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_CONTROLLER_QUORUM_VOTERS=1@broker:9093

      # --- Листенеры: внешний и внутренний + контроллер ---
      - KAFKA_LISTENERS=PLAINTEXT_HOST://0.0.0.0:9092,PLAINTEXT_INTERNAL://0.0.0.0:19092,CONTROLLER://0.0.0.0:9093
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT_HOST://localhost:9092,PLAINTEXT_INTERNAL://broker:19092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT_HOST:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT

      # --- Одноузловые значения для служебных логов/топиков ---
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS=0
      - KAFKA_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_INTER_BROKER_LISTENER_NAME=PLAINTEXT_INTERNAL
      # --- Директории логов брокера ---
      - KAFKA_LOG_DIRS=/var/lib/kafka/data
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: cache
    ports:
      - 6379:6379
    volumes:
      - redis-data:/data
    networks:
      - app_network

  postgres:
    image: postgres:16
    container_name: database
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
      - APP_DB_USER=${APP_DB_USER}
      - APP_DB_PASSWORD=${APP_DB_PASSWORD}
      - APP_DB_NAME=${APP_DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db/init/role.sh:/docker-entrypoint-initdb.d/role.sh
    networks:
      - app_network

  #server:
  #  ...

networks:
  app_network:
    driver: bridge

volumes:
  pgdata:
  redis-data:
  kafka_data: